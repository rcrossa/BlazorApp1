// <auto-generated />
using System;
using BlazorApp2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorApp2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201104003407_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("BlazorApp2.Data.Detalle", b =>
                {
                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Recursonombre")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TareaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tiempo")
                        .HasColumnType("TEXT");

                    b.HasKey("Fecha");

                    b.HasIndex("Recursonombre");

                    b.HasIndex("TareaId");

                    b.ToTable("Detalle");
                });

            modelBuilder.Entity("BlazorApp2.Data.Recurso", b =>
                {
                    b.Property<string>("nombre")
                        .HasColumnType("TEXT");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("nombre");

                    b.HasIndex("usuarioId");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("BlazorApp2.Data.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Tarea");
                });

            modelBuilder.Entity("BlazorApp2.Data.TipoTarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoTarea");
                });

            modelBuilder.Entity("BlazorApp2.Data.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("usuarioid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BlazorApp2.Data.Detalle", b =>
                {
                    b.HasOne("BlazorApp2.Data.Recurso", "Recurso")
                        .WithMany()
                        .HasForeignKey("Recursonombre");

                    b.HasOne("BlazorApp2.Data.Tarea", "Tarea")
                        .WithMany()
                        .HasForeignKey("TareaId");
                });

            modelBuilder.Entity("BlazorApp2.Data.Recurso", b =>
                {
                    b.HasOne("BlazorApp2.Data.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("BlazorApp2.Data.Tarea", b =>
                {
                    b.HasOne("BlazorApp2.Data.TipoTarea", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
